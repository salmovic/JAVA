/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Aplicacion;

import Busqueda.EnProfundidad;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


/**
 *
 * @author Skynet
 */
public class Mapa extends javax.swing.JFrame{

    /**
     * Creates new form Mapa
     */
  ArrayList liProfundidad = new ArrayList();
  ArrayList liAnchura = new ArrayList();
    Thread hilo;
    boolean band; 
    static Hilo h;
    static Mapa init;
    public Mapa() {
        initComponents();        
        Imagen imf = new Imagen(pnlFondo);
        pnlFondo.add(imf);
        //llenamos el arbol
        Busqueda();     
        band=true;
        h= new Hilo((int)cbxAlgoritmo.getSelectedIndex(), liProfundidad, liAnchura);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFondo = new javax.swing.JPanel();
        lblChicon = new javax.swing.JLabel();
        lblLlano = new javax.swing.JLabel();
        lblJuarez = new javax.swing.JLabel();
        lblAlamo = new javax.swing.JLabel();
        lblOxitempa = new javax.swing.JLabel();
        lblItzuatlan = new javax.swing.JLabel();
        lblNaranjal = new javax.swing.JLabel();
        lblJabonera = new javax.swing.JLabel();
        lblTlachichilco = new javax.swing.JLabel();
        cbxNodos = new javax.swing.JComboBox();
        btnIniciar = new javax.swing.JButton();
        lblCarro = new javax.swing.JLabel();
        cbxAlgoritmo = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblChicon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblChicon.setText("CHICONTEPEC");

        lblLlano.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLlano.setText("LLANO");

        lblJuarez.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJuarez.setText("JUAREZ");

        lblAlamo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAlamo.setText("ALAMO");

        lblOxitempa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblOxitempa.setText("OXITEMPA");

        lblItzuatlan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblItzuatlan.setText("ITZUATLAN");

        lblNaranjal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNaranjal.setText("NARANJAL");

        lblJabonera.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJabonera.setText("JABONERA");

        lblTlachichilco.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTlachichilco.setText("TLACHICHILCO");

        cbxNodos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Seleccione Destino --", "JUAREZ", "LLANO", "OXITEMPA", "JABONERA", "NARANJAL", "TLACHICHILCO", "ITZUATLAN", "ALAMO" }));

        btnIniciar.setText("Iniciar");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        lblCarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/carro_der.png"))); // NOI18N

        cbxAlgoritmo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Seleccione Algoritmo --", "EN PROFUNDIDAD", "EN ANCHURA" }));

        javax.swing.GroupLayout pnlFondoLayout = new javax.swing.GroupLayout(pnlFondo);
        pnlFondo.setLayout(pnlFondoLayout);
        pnlFondoLayout.setHorizontalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFondoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblOxitempa, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(326, 326, 326))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFondoLayout.createSequentialGroup()
                        .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlFondoLayout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(lblNaranjal, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblTlachichilco, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFondoLayout.createSequentialGroup()
                                .addComponent(lblChicon, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(241, 241, 241)
                                .addComponent(lblAlamo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 238, Short.MAX_VALUE)
                                .addComponent(lblItzuatlan, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(77, 77, 77))
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlFondoLayout.createSequentialGroup()
                                .addComponent(lblJuarez, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(112, 112, 112)
                                .addComponent(lblLlano, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlFondoLayout.createSequentialGroup()
                                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbxNodos, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbxAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(216, 216, 216)
                                .addComponent(lblJabonera, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addComponent(btnIniciar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlFondoLayout.setVerticalGroup(
            pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFondoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblChicon, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblAlamo, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItzuatlan, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(119, 119, 119)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLlano, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJuarez, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(lblOxitempa, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnIniciar)
                    .addComponent(lblCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFondoLayout.createSequentialGroup()
                        .addComponent(cbxNodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbxAlgoritmo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addComponent(lblJabonera, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addGroup(pnlFondoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNaranjal, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTlachichilco, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
     
    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        if (cbxAlgoritmo.getSelectedIndex()==0) {
            JOptionPane.showMessageDialog(rootPane, "Debe seleccionar algun algoritmo.");
            cbxAlgoritmo.requestFocus();
            return;
        }
        if (cbxNodos.getSelectedIndex()==0) {
           JOptionPane.showMessageDialog(rootPane, "Debe seleccionar algun destino."); 
           cbxNodos.requestFocus();
           return;
        }
        switch ((int) cbxAlgoritmo.getSelectedIndex()) {
            case 1:
                profundidad();
                EnProfundidad p = new EnProfundidad(liProfundidad);
                break;
            case 2:
                anchura();
                break;
        } 
      

//         if (!h.isAlive()) {
//            h= new Hilo((int)cbxAlgoritmo.getSelectedIndex(), liProfundidad, liAnchura);        
//            h.setName("Principal");
//            
//            h.star();            
//        }               
        
    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mapa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    init = new Mapa();
                    init.setVisible(true);
                    h.join();
                } catch (InterruptedException ex) {
                    Logger.getLogger(Mapa.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JComboBox cbxAlgoritmo;
    private javax.swing.JComboBox cbxNodos;
    public static javax.swing.JLabel lblAlamo;
    public static javax.swing.JLabel lblCarro;
    public static javax.swing.JLabel lblChicon;
    public static javax.swing.JLabel lblItzuatlan;
    public static javax.swing.JLabel lblJabonera;
    public static javax.swing.JLabel lblJuarez;
    public static javax.swing.JLabel lblLlano;
    public static javax.swing.JLabel lblNaranjal;
    public static javax.swing.JLabel lblOxitempa;
    public static javax.swing.JLabel lblTlachichilco;
    private javax.swing.JPanel pnlFondo;
    // End of variables declaration//GEN-END:variables
    NodoGrafico chicon;
    //llenando el arbol
    public void Busqueda()
    {
        chicon = new NodoGrafico(lblChicon);
        NodoGrafico juarez = new NodoGrafico(lblJuarez);
        NodoGrafico llano = new NodoGrafico(lblLlano);
        NodoGrafico oxitempa = new NodoGrafico(lblOxitempa);
        NodoGrafico jabonera = new NodoGrafico(lblJabonera);
        NodoGrafico naranjal = new NodoGrafico(lblNaranjal);
        NodoGrafico tlachi  = new NodoGrafico(lblTlachichilco);
        NodoGrafico itzuatlan = new NodoGrafico(lblItzuatlan);
        NodoGrafico alamo = new NodoGrafico(lblAlamo);
        
        chicon.addNodoHijo(juarez);
        
        juarez.addNodoHijo(llano);
        
        llano.addNodoHijo(oxitempa);
        llano.addNodoHijo(alamo);
        
        oxitempa.addNodoHijo(jabonera);
        oxitempa.addNodoHijo(itzuatlan);
        
        jabonera.addNodoHijo(naranjal);
        jabonera.addNodoHijo(tlachi);
    }
    void profundidad()
    {    
        busquedaPrimeroProfundidad((String) cbxNodos.getSelectedItem(), chicon);
    }
    void anchura()
    {        
       busquedaAnchura((String) cbxNodos.getSelectedItem(), chicon);
    }
        /**BUSQUEDA EN PROFUNDIDAD*/
    boolean busquedaPrimeroProfundidad(String datoBuscar, NodoGrafico nodoInicial) {
        //clase de tipo Pila
        Stack<NodoGrafico> pila = new Stack<>();
        //agregamos el primer nodo
        pila.push(nodoInicial);
        while (pila.size() != 0) {
            
            NodoGrafico nodo = pila.pop();
            String n = nodo.getDato().getText();
            liProfundidad.add(n);
                if (nodo.getDato().getText().equals(datoBuscar)) {
                    return true;
                } else {
                    for (int i = nodo.getListaNodoHijos().size() - 1; i >= 0; i--) {
                        pila.push(nodo.getListaNodoHijos().get(i));                        
                    }                    
                }
            }   
        return false;
    }       
        /*BUSQUEDA EN ANCHURA*/
    boolean busquedaAnchura(String datoBuscar, NodoGrafico nodoInicial) {
        //clase tipo cola
        Queue<NodoGrafico> cola = new LinkedList();
        cola.add(nodoInicial);
        while(cola.size()!=0)
        {
            NodoGrafico nodo = cola.poll();
            liAnchura.add(nodo.getDato().getText());
            if (nodo.getDato().getText().equals(datoBuscar)) {
                return true;                
            }else
            {
                for (NodoGrafico i:nodo.getListaNodoHijos()) {
                    cola.add(i);
                }
            }
        }
        return false;
    }

}
